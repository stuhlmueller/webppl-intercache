var options = {
  funcGeneration: {
    prior: {
      offsetMean: 0,
      offsetVar: 5,
      slopeMean: 1,
      slopeVar: 5
    },

    guide: {
      initialOffsetMean: 0,
      initialOffsetVar: 3,
      initialSlopeMean: 1,
      initialSlopeVar: 3
    }
  },
  hyperparams: {
    optimization: {
      stepSize: .01,
      steps: 1000
    },

    prediction: {
      samples: 1000
    },
    
    regressionVariance: 1,
    threshold: .1
  }
}


var N = 11;

var slowBinomial = function(p) {
  return Enumerate(function(){
    var xs = repeat(N, function(){ return flip(p); });
    return sum(xs);
  });
};

// this is the function we want to speed up by caching
var slowBinomialMean = function(p) {
  return mean(slowBinomial(p));
};

var fastBinomialMean = interCache(slowBinomialMean, options, makeLinearFunction);

var inferBinomialP = function(binomialMean) {
  var p = uniform(0, 1);
  var m = binomialMean(p);
  // condition(m < 3);  // we know that the mean is < 3
  return p;
}

var profile = function(label, binomialMean) {
  console.log('\n' + label + ':');
  console.log(timeit(function(){
    Rejection(function(){return inferBinomialP(binomialMean);}, 200); // .print();
  }).runtimeInMilliseconds.toString() + 'ms');
}

profile('fastBinomialMean', fastBinomialMean);
profile('slowBinomialMean', slowBinomialMean);


console.log('test.wppl done.');
